{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SelectDropdown from 'react-native-select-dropdown';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\n\nvar FilterBar = function (_React$Component) {\n  _inherits(FilterBar, _React$Component);\n\n  var _super = _createSuper(FilterBar);\n\n  function FilterBar(props) {\n    var _this;\n\n    _classCallCheck(this, FilterBar);\n\n    _this = _super.call(this, props);\n\n    _this.toggleSwitch = function () {\n      _this.setState({\n        isNearby: !_this.state.isNearby\n      });\n\n      if (_this.state.isNearby) {\n        console.log('nearby');\n\n        _this.props.updateDistance(_this.state.isNearbyDistance);\n      } else {\n        _this.props.updateDistance(-1);\n      }\n    };\n\n    _this.state = {\n      isNearby: true,\n      isNearbyDistance: 20,\n      fieldOfStudy: [{\n        label: 'all',\n        value: 'all'\n      }, {\n        label: 'Computer Science',\n        value: 'computerScience'\n      }, {\n        label: 'Biology',\n        value: 'biology'\n      }, {\n        label: 'Music',\n        value: 'music'\n      }, {\n        label: 'Sports',\n        value: 'sports'\n      }, {\n        label: 'Mechanical Engineering',\n        value: 'mechanicalEngineering'\n      }, {\n        label: 'Law',\n        value: 'law'\n      }, {\n        label: 'Psychology',\n        value: 'psychology'\n      }],\n      genders: [{\n        label: 'all',\n        value: 'all'\n      }, {\n        label: 'Male',\n        value: 'male'\n      }, {\n        label: 'Female',\n        value: 'female'\n      }, {\n        label: 'Non-Binary',\n        value: 'non-binary'\n      }, {\n        label: 'Other',\n        value: 'other'\n      }, {\n        label: 'I prefer not to say',\n        value: 'notSpecified'\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(FilterBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.filterBar\n      }, React.createElement(View, {\n        style: styles.filterSection\n      }, React.createElement(Text, null, \"only nearby: \"), React.createElement(Switch, {\n        style: styles.switch,\n        trackColor: {\n          false: \"#767577\",\n          true: \"lightgrey\"\n        },\n        thumbColor: !this.state.isNearby ? \"blue\" : \"#f4f3f4\",\n        ios_backgroundColor: \"#3e3e3e\",\n        onValueChange: this.toggleSwitch,\n        value: !this.state.isNearby\n      })), React.createElement(View, {\n        style: styles.filterSection\n      }, React.createElement(Text, null, \"gender: \"), React.createElement(SelectDropdown, {\n        defaultButtonText: 'all',\n        renderDropdownIcon: function renderDropdownIcon() {\n          return React.createElement(Icon, {\n            name: \"chevron-down\",\n            size: 18,\n            color: \"#444\"\n          });\n        },\n        dropdownIconPosition: \"right\",\n        data: this.state.genders,\n        onSelect: function onSelect(selectedItem, index) {\n          _this2.props.updateGender([selectedItem.value]);\n        },\n        buttonTextAfterSelection: function buttonTextAfterSelection(selectedItem, index) {\n          return selectedItem.label;\n        },\n        rowTextForSelection: function rowTextForSelection(item, index) {\n          return item.label;\n        },\n        buttonStyle: styles.dropdown1BtnStyle,\n        buttonTextStyle: styles.dropdown1BtnTxtStyle,\n        dropdownStyle: styles.dropdown1DropdownStyle,\n        rowStyle: styles.dropdown1RowStyle,\n        rowTextStyle: styles.dropdown1RowTxtStyle\n      })), React.createElement(View, {\n        style: styles.filterSection\n      }, React.createElement(Text, null, \"field of study: \"), React.createElement(SelectDropdown, {\n        defaultButtonText: 'all',\n        renderDropdownIcon: function renderDropdownIcon() {\n          return React.createElement(Icon, {\n            name: \"chevron-down\",\n            size: 18,\n            color: \"#444\"\n          });\n        },\n        dropdownIconPosition: \"right\",\n        data: this.state.fieldOfStudy,\n        onSelect: function onSelect(selectedItem, index) {\n          _this2.props.updateFieldOfStudy([selectedItem.value]);\n        },\n        buttonTextAfterSelection: function buttonTextAfterSelection(selectedItem, index) {\n          return selectedItem.label;\n        },\n        rowTextForSelection: function rowTextForSelection(item, index) {\n          return item.label;\n        },\n        buttonStyle: styles.dropdown1BtnStyle,\n        buttonTextStyle: styles.dropdown1BtnTxtStyle,\n        dropdownStyle: styles.dropdown1DropdownStyle,\n        rowStyle: styles.dropdown1RowStyle,\n        rowTextStyle: styles.dropdown1RowTxtStyle\n      })));\n    }\n  }]);\n\n  return FilterBar;\n}(React.Component);\n\nexport { FilterBar as default };\nvar styles = StyleSheet.create({\n  filterBar: {\n    alignSelf: 'center',\n    marginLeft: 40,\n    marginRight: 40,\n    marginBottom: 40,\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 10,\n    width: '95%',\n    minHeight: 50\n  },\n  filterSection: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  switch: {\n    marginRight: 40\n  },\n  dropdown1BtnStyle: {\n    height: 35,\n    backgroundColor: \"#FFF\",\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: \"#444\",\n    width: 210,\n    marginRight: 40\n  },\n  dropdown1BtnTxtStyle: {\n    color: \"#444\",\n    fontSize: 18,\n    textAlign: \"left\"\n  },\n  dropdown1DropdownStyle: {\n    backgroundColor: \"#EFEFEF\"\n  },\n  dropdown1RowStyle: {\n    backgroundColor: \"#EFEFEF\",\n    borderBottomColor: \"#C5C5C5\"\n  },\n  dropdown1RowTxtStyle: {\n    color: \"#444\",\n    textAlign: \"left\"\n  }\n});","map":{"version":3,"sources":["/Users/erin/Desktop/Code/Golf-21-22/components/FilterBar.js"],"names":["React","SelectDropdown","Icon","FilterBar","props","toggleSwitch","setState","isNearby","state","console","log","updateDistance","isNearbyDistance","fieldOfStudy","label","value","genders","styles","filterBar","filterSection","switch","false","true","selectedItem","index","updateGender","item","dropdown1BtnStyle","dropdown1BtnTxtStyle","dropdown1DropdownStyle","dropdown1RowStyle","dropdown1RowTxtStyle","updateFieldOfStudy","Component","StyleSheet","create","alignSelf","marginLeft","marginRight","marginBottom","display","flexDirection","flexWrap","alignItems","padding","width","minHeight","height","backgroundColor","borderRadius","borderWidth","borderColor","color","fontSize","textAlign","borderBottomColor"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,IAAP;;IAEqBC,S;;;;;AAEjB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UA0BnBC,YA1BmB,GA0BJ,YAAM;AACjB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAE,CAAC,MAAKC,KAAL,CAAWD;AAAxB,OAAd;;AACA,UAAI,MAAKC,KAAL,CAAWD,QAAf,EAAyB;AACrBE,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,cAAKN,KAAL,CAAWO,cAAX,CAA0B,MAAKH,KAAL,CAAWI,gBAArC;AACH,OAHD,MAGO;AACH,cAAKR,KAAL,CAAWO,cAAX,CAA0B,CAAC,CAA3B;AACH;AACJ,KAlCkB;;AAEf,UAAKH,KAAL,GAAa;AACTD,MAAAA,QAAQ,EAAE,IADD;AAGTK,MAAAA,gBAAgB,EAAE,EAHT;AAITC,MAAAA,YAAY,EAAE,CACV;AAAEC,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OADU,EAEV;AAAED,QAAAA,KAAK,EAAE,kBAAT;AAA6BC,QAAAA,KAAK,EAAE;AAApC,OAFU,EAGV;AAAED,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OAHU,EAIV;AAAED,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAJU,EAKV;AAAED,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OALU,EAMV;AAAED,QAAAA,KAAK,EAAE,wBAAT;AAAmCC,QAAAA,KAAK,EAAE;AAA1C,OANU,EAOV;AAAED,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAPU,EAQV;AAAED,QAAAA,KAAK,EAAE,YAAT;AAAuBC,QAAAA,KAAK,EAAE;AAA9B,OARU,CAJL;AAcTC,MAAAA,OAAO,EAAE,CACL;AAAEF,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OADK,EAEL;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OAFK,EAGL;AAAED,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAHK,EAIL;AAAED,QAAAA,KAAK,EAAE,YAAT;AAAuBC,QAAAA,KAAK,EAAE;AAA9B,OAJK,EAKL;AAAED,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OALK,EAML;AAAED,QAAAA,KAAK,EAAE,qBAAT;AAAgCC,QAAAA,KAAK,EAAE;AAAvC,OANK;AAdA,KAAb;AAFe;AAwBlB;;;;WAYD,kBAAS;AAAA;;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,MAAM,CAACC;AAApB,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE;AAApB,SACI,oBAAC,IAAD,wBADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAEF,MAAM,CAACG,MAAtB;AACI,QAAA,UAAU,EAAE;AAAEC,UAAAA,KAAK,EAAE,SAAT;AAAoBC,UAAAA,IAAI,EAAE;AAA1B,SADhB;AAEI,QAAA,UAAU,EAAE,CAAC,KAAKd,KAAL,CAAWD,QAAZ,GAAuB,MAAvB,GAAgC,SAFhD;AAGI,QAAA,mBAAmB,EAAC,SAHxB;AAII,QAAA,aAAa,EAAE,KAAKF,YAJxB;AAKI,QAAA,KAAK,EAAE,CAAC,KAAKG,KAAL,CAAWD;AALvB,QAFJ,CADJ,EAWI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEU,MAAM,CAACE;AAApB,SACI,oBAAC,IAAD,mBADJ,EAEI,oBAAC,cAAD;AACI,QAAA,iBAAiB,EAAE,KADvB;AAEI,QAAA,kBAAkB,EAAE,8BAAM;AACtB,iBACI,oBAAC,IAAD;AACI,YAAA,IAAI,EAAC,cADT;AAEI,YAAA,IAAI,EAAE,EAFV;AAGI,YAAA,KAAK,EAAC;AAHV,YADJ;AAOH,SAVL;AAWI,QAAA,oBAAoB,EAAE,OAX1B;AAYI,QAAA,IAAI,EAAE,KAAKX,KAAL,CAAWQ,OAZrB;AAaI,QAAA,QAAQ,EAAE,kBAACO,YAAD,EAAeC,KAAf,EAAyB;AAC/B,UAAA,MAAI,CAACpB,KAAL,CAAWqB,YAAX,CAAwB,CAACF,YAAY,CAACR,KAAd,CAAxB;AACH,SAfL;AAgBI,QAAA,wBAAwB,EAAE,kCAACQ,YAAD,EAAeC,KAAf,EAAyB;AAC/C,iBAAOD,YAAY,CAACT,KAApB;AACH,SAlBL;AAmBI,QAAA,mBAAmB,EAAE,6BAACY,IAAD,EAAOF,KAAP,EAAiB;AAClC,iBAAOE,IAAI,CAACZ,KAAZ;AACH,SArBL;AAsBI,QAAA,WAAW,EAAEG,MAAM,CAACU,iBAtBxB;AAuBI,QAAA,eAAe,EAAEV,MAAM,CAACW,oBAvB5B;AAwBI,QAAA,aAAa,EAAEX,MAAM,CAACY,sBAxB1B;AAyBI,QAAA,QAAQ,EAAEZ,MAAM,CAACa,iBAzBrB;AA0BI,QAAA,YAAY,EAAEb,MAAM,CAACc;AA1BzB,QAFJ,CAXJ,EA0CI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEd,MAAM,CAACE;AAApB,SACI,oBAAC,IAAD,2BADJ,EAEI,oBAAC,cAAD;AACI,QAAA,iBAAiB,EAAE,KADvB;AAEI,QAAA,kBAAkB,EAAE,8BAAM;AACtB,iBACI,oBAAC,IAAD;AACI,YAAA,IAAI,EAAC,cADT;AAEI,YAAA,IAAI,EAAE,EAFV;AAGI,YAAA,KAAK,EAAC;AAHV,YADJ;AAOH,SAVL;AAWI,QAAA,oBAAoB,EAAE,OAX1B;AAYI,QAAA,IAAI,EAAE,KAAKX,KAAL,CAAWK,YAZrB;AAaI,QAAA,QAAQ,EAAE,kBAACU,YAAD,EAAeC,KAAf,EAAyB;AAC/B,UAAA,MAAI,CAACpB,KAAL,CAAW4B,kBAAX,CAA8B,CAACT,YAAY,CAACR,KAAd,CAA9B;AACH,SAfL;AAgBI,QAAA,wBAAwB,EAAE,kCAACQ,YAAD,EAAeC,KAAf,EAAyB;AAC/C,iBAAOD,YAAY,CAACT,KAApB;AACH,SAlBL;AAmBI,QAAA,mBAAmB,EAAE,6BAACY,IAAD,EAAOF,KAAP,EAAiB;AAClC,iBAAOE,IAAI,CAACZ,KAAZ;AACH,SArBL;AAsBI,QAAA,WAAW,EAAEG,MAAM,CAACU,iBAtBxB;AAuBI,QAAA,eAAe,EAAEV,MAAM,CAACW,oBAvB5B;AAwBI,QAAA,aAAa,EAAEX,MAAM,CAACY,sBAxB1B;AAyBI,QAAA,QAAQ,EAAEZ,MAAM,CAACa,iBAzBrB;AA0BI,QAAA,YAAY,EAAEb,MAAM,CAACc;AA1BzB,QAFJ,CA1CJ,CADJ;AA4EH;;;;EAnHkC/B,KAAK,CAACiC,S;;SAAxB9B,S;AAsHrB,IAAMc,MAAM,GAAGiB,UAAU,CAACC,MAAX,CAAkB;AAC7BjB,EAAAA,SAAS,EAAE;AACPkB,IAAAA,SAAS,EAAE,QADJ;AAEPC,IAAAA,UAAU,EAAE,EAFL;AAGPC,IAAAA,WAAW,EAAE,EAHN;AAIPC,IAAAA,YAAY,EAAE,EAJP;AAKPC,IAAAA,OAAO,EAAE,MALF;AAMPC,IAAAA,aAAa,EAAE,KANR;AAOPC,IAAAA,QAAQ,EAAE,MAPH;AAQPC,IAAAA,UAAU,EAAE,QARL;AASPC,IAAAA,OAAO,EAAE,EATF;AAUPC,IAAAA,KAAK,EAAE,KAVA;AAWPC,IAAAA,SAAS,EAAE;AAXJ,GADkB;AAc7B3B,EAAAA,aAAa,EAAE;AACXqB,IAAAA,OAAO,EAAE,MADE;AAEXC,IAAAA,aAAa,EAAE,KAFJ;AAGXE,IAAAA,UAAU,EAAE,QAHD;AAIXJ,IAAAA,YAAY,EAAE;AAJH,GAdc;AAoB7BnB,EAAAA,MAAM,EAAE;AACJkB,IAAAA,WAAW,EAAE;AADT,GApBqB;AAuB7BX,EAAAA,iBAAiB,EAAE;AACfoB,IAAAA,MAAM,EAAE,EADO;AAEfC,IAAAA,eAAe,EAAE,MAFF;AAGfC,IAAAA,YAAY,EAAE,CAHC;AAIfC,IAAAA,WAAW,EAAE,CAJE;AAKfC,IAAAA,WAAW,EAAE,MALE;AAMfN,IAAAA,KAAK,EAAE,GANQ;AAOfP,IAAAA,WAAW,EAAE;AAPE,GAvBU;AAgC7BV,EAAAA,oBAAoB,EAAE;AAAEwB,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,QAAQ,EAAE,EAA3B;AAA+BC,IAAAA,SAAS,EAAE;AAA1C,GAhCO;AAiC7BzB,EAAAA,sBAAsB,EAAE;AAAEmB,IAAAA,eAAe,EAAE;AAAnB,GAjCK;AAkC7BlB,EAAAA,iBAAiB,EAAE;AACfkB,IAAAA,eAAe,EAAE,SADF;AAEfO,IAAAA,iBAAiB,EAAE;AAFJ,GAlCU;AAsC7BxB,EAAAA,oBAAoB,EAAE;AAAEqB,IAAAA,KAAK,EAAE,MAAT;AAAiBE,IAAAA,SAAS,EAAE;AAA5B;AAtCO,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { View, Switch, Text, StyleSheet } from \"react-native\";\nimport SelectDropdown from 'react-native-select-dropdown'\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nexport default class FilterBar extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            isNearby: true,\n            //Arbitrary value for now\n            isNearbyDistance: 20,\n            fieldOfStudy: [\n                { label: 'all', value: 'all' },\n                { label: 'Computer Science', value: 'computerScience' },\n                { label: 'Biology', value: 'biology' },\n                { label: 'Music', value: 'music' },\n                { label: 'Sports', value: 'sports' },\n                { label: 'Mechanical Engineering', value: 'mechanicalEngineering' },\n                { label: 'Law', value: 'law' },\n                { label: 'Psychology', value: 'psychology' }\n            ],\n            genders: [\n                { label: 'all', value: 'all' },\n                { label: 'Male', value: 'male' },\n                { label: 'Female', value: 'female' },\n                { label: 'Non-Binary', value: 'non-binary' },\n                { label: 'Other', value: 'other' },\n                { label: 'I prefer not to say', value: 'notSpecified' }]\n        }\n    }\n\n    toggleSwitch = () => {\n        this.setState({ isNearby: !this.state.isNearby })\n        if (this.state.isNearby) {\n            console.log('nearby')\n            this.props.updateDistance(this.state.isNearbyDistance)\n        } else {\n            this.props.updateDistance(-1)\n        }\n    }\n\n    render() {\n        return (\n            <View style={styles.filterBar}>\n                <View style={styles.filterSection}>\n                    <Text>only nearby: </Text>\n                    <Switch style={styles.switch}\n                        trackColor={{ false: \"#767577\", true: \"lightgrey\" }}\n                        thumbColor={!this.state.isNearby ? \"blue\" : \"#f4f3f4\"}\n                        ios_backgroundColor=\"#3e3e3e\"\n                        onValueChange={this.toggleSwitch}\n                        value={!this.state.isNearby}\n                    />\n                </View>\n                <View style={styles.filterSection}>\n                    <Text>gender: </Text>\n                    <SelectDropdown\n                        defaultButtonText={'all'}\n                        renderDropdownIcon={() => {\n                            return (\n                                <Icon\n                                    name=\"chevron-down\"\n                                    size={18}\n                                    color=\"#444\"\n                                />\n                            );\n                        }}\n                        dropdownIconPosition={\"right\"}\n                        data={this.state.genders}\n                        onSelect={(selectedItem, index) => {\n                            this.props.updateGender([selectedItem.value])\n                        }}\n                        buttonTextAfterSelection={(selectedItem, index) => {\n                            return selectedItem.label\n                        }}\n                        rowTextForSelection={(item, index) => {\n                            return item.label\n                        }}\n                        buttonStyle={styles.dropdown1BtnStyle}\n                        buttonTextStyle={styles.dropdown1BtnTxtStyle}\n                        dropdownStyle={styles.dropdown1DropdownStyle}\n                        rowStyle={styles.dropdown1RowStyle}\n                        rowTextStyle={styles.dropdown1RowTxtStyle}\n                    />\n                </View>\n                <View style={styles.filterSection}>\n                    <Text>field of study: </Text>\n                    <SelectDropdown\n                        defaultButtonText={'all'}\n                        renderDropdownIcon={() => {\n                            return (\n                                <Icon\n                                    name=\"chevron-down\"\n                                    size={18}\n                                    color=\"#444\"\n                                />\n                            );\n                        }}\n                        dropdownIconPosition={\"right\"}\n                        data={this.state.fieldOfStudy}\n                        onSelect={(selectedItem, index) => {\n                            this.props.updateFieldOfStudy([selectedItem.value])\n                        }}\n                        buttonTextAfterSelection={(selectedItem, index) => {\n                            return selectedItem.label\n                        }}\n                        rowTextForSelection={(item, index) => {\n                            return item.label\n                        }}\n                        buttonStyle={styles.dropdown1BtnStyle}\n                        buttonTextStyle={styles.dropdown1BtnTxtStyle}\n                        dropdownStyle={styles.dropdown1DropdownStyle}\n                        rowStyle={styles.dropdown1RowStyle}\n                        rowTextStyle={styles.dropdown1RowTxtStyle}\n                    />\n                </View>\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    filterBar: {\n        alignSelf: 'center',\n        marginLeft: 40,\n        marginRight: 40,\n        marginBottom: 40,\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        alignItems: 'center',\n        padding: 10,\n        width: '95%',\n        minHeight: 50\n    },\n    filterSection: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 8\n    },\n    switch: {\n        marginRight: 40\n    },\n    dropdown1BtnStyle: {\n        height: 35,\n        backgroundColor: \"#FFF\",\n        borderRadius: 8,\n        borderWidth: 1,\n        borderColor: \"#444\",\n        width: 210,\n        marginRight: 40\n    },\n    dropdown1BtnTxtStyle: { color: \"#444\", fontSize: 18, textAlign: \"left\" },\n    dropdown1DropdownStyle: { backgroundColor: \"#EFEFEF\", },\n    dropdown1RowStyle: {\n        backgroundColor: \"#EFEFEF\",\n        borderBottomColor: \"#C5C5C5\",\n    },\n    dropdown1RowTxtStyle: { color: \"#444\", textAlign: \"left\" },\n})"]},"metadata":{},"sourceType":"module"}