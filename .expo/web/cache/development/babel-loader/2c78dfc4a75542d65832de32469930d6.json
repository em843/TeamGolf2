{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport { useState, useCallback, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Constants from 'expo-constants';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { GiftedChat } from 'react-native-gifted-chat';\n\nvar Chat = function (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat() {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this.state = {\n      messages: useState([]),\n      setMessages: useState([])\n    };\n    useEffect(function () {\n      setMessages([{\n        _id: 1,\n        text: 'Hello developer',\n        createdAt: new Date(),\n        user: {\n          _id: 2,\n          name: 'React Native',\n          avatar: 'https://placeimg.com/140/140/any'\n        }\n      }]);\n    }, []);\n    onSend = useCallback(function () {\n      var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      setMessages(function (previousMessages) {\n        return GiftedChat.append(previousMessages, messages);\n      });\n    }, []);\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(Chat, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var chat = React.createElement(GiftedChat, {\n        messages: this.state.messages,\n        onSend: function onSend(messages) {\n          return _this2.onSend(messages);\n        }\n      });\n\n      if (Platform.OS === 'android') {\n        return React.createElement(KeyboardAvoidingView, {\n          style: {\n            flex: 1\n          },\n          behavior: \"padding\",\n          keyboardVerticalOffset: 30,\n          enabled: true\n        }, chat);\n      }\n\n      return React.createElement(SafeAreaView, {\n        style: {\n          flex: 1\n        }\n      }, chat);\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport { Chat as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#ecf0f1',\n    padding: 8\n  },\n  paragraph: {\n    margin: 24,\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/erin/Desktop/Code/Golf-21-22/screens/Chat.js"],"names":["React","useState","useCallback","useEffect","Constants","GiftedChat","Chat","state","messages","setMessages","_id","text","createdAt","Date","user","name","avatar","onSend","previousMessages","append","chat","Platform","OS","flex","Component","styles","StyleSheet","create","container","justifyContent","paddingTop","statusBarHeight","backgroundColor","padding","paragraph","margin","fontSize","fontWeight","textAlign"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;;;;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;;;;AAEA,SAASC,UAAT,QAA2B,0BAA3B;;IAEqBC,I;;;;;AACnB,kBAAc;AAAA;;AAAA;;AACZ,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEP,QAAQ,CAAC,EAAD,CADP;AAEXQ,MAAAA,WAAW,EAAER,QAAQ,CAAC,EAAD;AAFV,KAAb;AAKAE,IAAAA,SAAS,CAAC,YAAM;AACdM,MAAAA,WAAW,CAAC,CACV;AACEC,QAAAA,GAAG,EAAE,CADP;AAEEC,QAAAA,IAAI,EAAE,iBAFR;AAGEC,QAAAA,SAAS,EAAE,IAAIC,IAAJ,EAHb;AAIEC,QAAAA,IAAI,EAAE;AACJJ,UAAAA,GAAG,EAAE,CADD;AAEJK,UAAAA,IAAI,EAAE,cAFF;AAGJC,UAAAA,MAAM,EAAE;AAHJ;AAJR,OADU,CAAD,CAAX;AAYD,KAbQ,EAaN,EAbM,CAAT;AAcAC,IAAAA,MAAM,GAAGf,WAAW,CAAC,YAAmB;AAAA,UAAlBM,QAAkB,uEAAP,EAAO;AACtCC,MAAAA,WAAW,CAAC,UAAAS,gBAAgB;AAAA,eAAIb,UAAU,CAACc,MAAX,CAAkBD,gBAAlB,EAAoCV,QAApC,CAAJ;AAAA,OAAjB,CAAX;AACD,KAFmB,EAEjB,EAFiB,CAApB;AApBY;AAuBb;;;;WAGD,kBAAS;AAAA;;AACP,UAAMY,IAAI,GAAG,oBAAC,UAAD;AAAY,QAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWC,QAAjC;AAA2C,QAAA,MAAM,EAAE,gBAAAA,QAAQ;AAAA,iBAAI,MAAI,CAACS,MAAL,CAAYT,QAAZ,CAAJ;AAAA;AAA3D,QAAb;;AAEA,UAAIa,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AAC7B,eACE,oBAAC,oBAAD;AAAsB,UAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR,WAA7B;AAA0C,UAAA,QAAQ,EAAC,SAAnD;AAA6D,UAAA,sBAAsB,EAAE,EAArF;AAAyF,UAAA,OAAO;AAAhG,WACGH,IADH,CADF;AAKD;;AACD,aACE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAAEG,UAAAA,IAAI,EAAE;AAAR;AAArB,SAEGH,IAFH,CADF;AAMD;;;;EA3C+BpB,KAAK,CAACwB,S;;SAAnBlB,I;AA8CrB,IAAMmB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTL,IAAAA,IAAI,EAAE,CADG;AAETM,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE1B,SAAS,CAAC2B,eAHb;AAITC,IAAAA,eAAe,EAAE,SAJR;AAKTC,IAAAA,OAAO,EAAE;AALA,GADoB;AAQ/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE,EADC;AAETC,IAAAA,QAAQ,EAAE,EAFD;AAGTC,IAAAA,UAAU,EAAE,MAHH;AAITC,IAAAA,SAAS,EAAE;AAJF;AARoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { useState, useCallback, useEffect } from 'react'\nimport { View, StyleSheet, Text } from 'react-native';\nimport Constants from 'expo-constants';\nimport { Platform, KeyboardAvoidingView, SafeAreaView } from 'react-native';\nimport { GiftedChat } from 'react-native-gifted-chat';\n\nexport default class Chat extends React.Component {\n  constructor() {\n    this.state = {\n      messages: useState([]),\n      setMessages: useState([])\n    }\n\n    useEffect(() => {\n      setMessages([\n        {\n          _id: 1,\n          text: 'Hello developer',\n          createdAt: new Date(),\n          user: {\n            _id: 2,\n            name: 'React Native',\n            avatar: 'https://placeimg.com/140/140/any',\n          },\n        },\n      ])\n    }, [])\n    onSend = useCallback((messages = []) => {\n      setMessages(previousMessages => GiftedChat.append(previousMessages, messages))\n    }, [])\n  }\n\n\n  render() {\n    const chat = <GiftedChat messages={this.state.messages} onSend={messages => this.onSend(messages)} />\n\n    if (Platform.OS === 'android') {\n      return (\n        <KeyboardAvoidingView style={{ flex: 1 }} behavior=\"padding\" keyboardVerticalOffset={30} enabled>\n          {chat}\n        </KeyboardAvoidingView>\n      );\n    }\n    return (\n      <SafeAreaView style={{ flex: 1 }}>\n\n        {chat}\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#ecf0f1',\n    padding: 8,\n  },\n  paragraph: {\n    margin: 24,\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n});\n\n"]},"metadata":{},"sourceType":"module"}