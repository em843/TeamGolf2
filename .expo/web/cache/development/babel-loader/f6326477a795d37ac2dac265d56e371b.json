{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport { useState, useCallback, useEffect, useLayoutEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { GiftedChat } from 'react-native-gifted-chat';\n\nvar Chat = function Chat(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          style: {\n            marginLeft: 20\n          }\n        }, React.createElement(Avatar, {\n          rounded: true\n        }));\n      },\n      headerRight: function headerRight() {\n        return React.createElement(TouchableOpacity, {\n          style: {\n            marginRight: 10\n          },\n          onPress: signOut\n        }, React.createElement(Text, null, \"logout\"));\n      }\n    });\n  }, [navigation]);\n  useEffect(function () {\n    setMessages([{\n      _id: 1,\n      text: 'Hello developer',\n      createdAt: new Date(),\n      user: {\n        _id: 2,\n        name: 'React Native',\n        avatar: 'https://placeimg.com/140/140/any'\n      }\n    }]);\n  }, []);\n\n  var _onSend = useCallback(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, messages);\n    });\n  }, []);\n\n  if (Platform.OS === 'android') {\n    console.log('1');\n    return React.createElement(KeyboardAvoidingView, {\n      style: {\n        flex: 1\n      },\n      behavior: \"padding\",\n      keyboardVerticalOffset: 30,\n      enabled: true\n    }, React.createElement(GiftedChat, {\n      messages: messages,\n      showAvatarForEveryMessage: true,\n      onSend: function onSend(messages) {\n        return _onSend(messages);\n      }\n    }));\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    }\n  }, React.createElement(GiftedChat, {\n    messages: messages,\n    showAvatarForEveryMessage: true,\n    onSend: function onSend(messages) {\n      return _onSend(messages);\n    }\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/erin/Desktop/Code/Golf-21-22/screens/Chat.js"],"names":["React","useState","useCallback","useEffect","useLayoutEffect","GiftedChat","Chat","navigation","messages","setMessages","setOptions","headerLeft","marginLeft","headerRight","marginRight","signOut","_id","text","createdAt","Date","user","name","avatar","onSend","previousMessages","append","Platform","OS","console","log","flex"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,EAA2CC,eAA3C,QAAkE,OAAlE;;;;;;;AAGA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAC/B,kBAAgCN,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,WAAjB;;AAEAL,EAAAA,eAAe,CAAC,YAAM;AACpBG,IAAAA,UAAU,CAACG,UAAX,CAAsB;AACpBC,MAAAA,UAAU,EAAE;AAAA,eACV,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,UAAU,EAAE;AAAd;AAAb,WACE,oBAAC,MAAD;AACE,UAAA,OAAO;AADT,UADF,CADU;AAAA,OADQ;AAQpBC,MAAAA,WAAW,EAAE;AAAA,eACX,oBAAC,gBAAD;AAAkB,UAAA,KAAK,EAAE;AACvBC,YAAAA,WAAW,EAAE;AADU,WAAzB;AAGE,UAAA,OAAO,EAAEC;AAHX,WAKE,oBAAC,IAAD,iBALF,CADW;AAAA;AARO,KAAtB;AAkBD,GAnBc,EAmBZ,CAACR,UAAD,CAnBY,CAAf;AAqBAJ,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,WAAW,CAAC,CACV;AACEO,MAAAA,GAAG,EAAE,CADP;AAEEC,MAAAA,IAAI,EAAE,iBAFR;AAGEC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,EAHb;AAIEC,MAAAA,IAAI,EAAE;AACJJ,QAAAA,GAAG,EAAE,CADD;AAEJK,QAAAA,IAAI,EAAE,cAFF;AAGJC,QAAAA,MAAM,EAAE;AAHJ;AAJR,KADU,CAAD,CAAX;AAYD,GAbQ,EAaN,EAbM,CAAT;;AAcA,MAAMC,OAAM,GAAGrB,WAAW,CAAC,YAAmB;AAAA,QAAlBM,QAAkB,uEAAP,EAAO;AAC5CC,IAAAA,WAAW,CAAC,UAAAe,gBAAgB;AAAA,aAAInB,UAAU,CAACoB,MAAX,CAAkBD,gBAAlB,EAAoChB,QAApC,CAAJ;AAAA,KAAjB,CAAX;AACD,GAFyB,EAEvB,EAFuB,CAA1B;;AAGA,MAAIkB,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,WACE,oBAAC,oBAAD;AAAsB,MAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA7B;AAA0C,MAAA,QAAQ,EAAC,SAAnD;AAA6D,MAAA,sBAAsB,EAAE,EAArF;AAAyF,MAAA,OAAO;AAAhG,OACE,oBAAC,UAAD;AACE,MAAA,QAAQ,EAAEtB,QADZ;AAEE,MAAA,yBAAyB,EAAE,IAF7B;AAGE,MAAA,MAAM,EAAE,gBAAAA,QAAQ;AAAA,eAAIe,OAAM,CAACf,QAAD,CAAV;AAAA;AAHlB,MADF,CADF;AASD;;AACD,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEsB,MAAAA,IAAI,EAAE;AAAR;AAArB,KACE,oBAAC,UAAD;AACA,IAAA,QAAQ,EAAEtB,QADV;AAEA,IAAA,yBAAyB,EAAE,IAF3B;AAGA,IAAA,MAAM,EAAE,gBAAAA,QAAQ;AAAA,aAAIe,OAAM,CAACf,QAAD,CAAV;AAAA;AAHhB,IADF,CADF;AAUD,CA/DD;;AAgEA,eAAeF,IAAf","sourcesContent":["import * as React from 'react';\nimport { useState, useCallback, useEffect, useLayoutEffect } from 'react'\nimport { View, StyleSheet, Text } from 'react-native';\nimport { Platform, KeyboardAvoidingView, SafeAreaView } from 'react-native';\nimport { GiftedChat } from 'react-native-gifted-chat';\n\nconst Chat = ({ navigation }) => {\n  const [messages, setMessages] = useState([]);\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerLeft: () => (\n        <View style={{ marginLeft: 20 }}>\n          <Avatar\n            rounded\n          />\n        </View>\n      ),\n      headerRight: () => (\n        <TouchableOpacity style={{\n          marginRight: 10\n        }}\n          onPress={signOut}\n        >\n          <Text>logout</Text>\n        </TouchableOpacity>\n      )\n    })\n  }, [navigation]);\n\n  useEffect(() => {\n    setMessages([\n      {\n        _id: 1,\n        text: 'Hello developer',\n        createdAt: new Date(),\n        user: {\n          _id: 2,\n          name: 'React Native',\n          avatar: 'https://placeimg.com/140/140/any',\n        },\n      },\n    ])\n  }, [])\n  const onSend = useCallback((messages = []) => {\n    setMessages(previousMessages => GiftedChat.append(previousMessages, messages))\n  }, [])\n  if (Platform.OS === 'android') {\n    console.log('1')\n    return (\n      <KeyboardAvoidingView style={{ flex: 1 }} behavior=\"padding\" keyboardVerticalOffset={30} enabled>\n        <GiftedChat\n          messages={messages}\n          showAvatarForEveryMessage={true}\n          onSend={messages => onSend(messages)}\n        />\n      </KeyboardAvoidingView>\n    );\n  }\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <GiftedChat\n      messages={messages}\n      showAvatarForEveryMessage={true}\n      onSend={messages => onSend(messages)}\n      />\n    </SafeAreaView>\n  );\n\n}\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}